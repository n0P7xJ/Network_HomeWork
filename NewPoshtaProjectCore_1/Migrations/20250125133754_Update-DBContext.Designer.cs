// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NovaPoshtaProject.Data;

#nullable disable

namespace NewPoshtaProjectCore_1.Migrations
{
    [DbContext(typeof(NovaPoshtaDbContext))]
    [Migration("20250125133754_Update-DBContext")]
    partial class UpdateDBContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("NovaPoshtaProjectCore_1.Models.Area", b =>
                {
                    b.Property<string>("Ref")
                        .HasColumnType("TEXT");

                    b.Property<string>("AreaDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Ref");

                    b.ToTable("tbl_Area");
                });

            modelBuilder.Entity("NovaPoshtaProjectCore_1.Models.City", b =>
                {
                    b.Property<string>("Ref")
                        .HasColumnType("TEXT");

                    b.Property<string>("AreaRef")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Ref");

                    b.HasIndex("AreaRef");

                    b.ToTable("tbl_City");
                });

            modelBuilder.Entity("NovaPoshtaProjectCore_1.Models.City", b =>
                {
                    b.HasOne("NovaPoshtaProjectCore_1.Models.Area", "Area")
                        .WithMany("Cities")
                        .HasForeignKey("AreaRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("NovaPoshtaProjectCore_1.Models.Area", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
